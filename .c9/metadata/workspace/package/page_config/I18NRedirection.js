{"changed":false,"filter":false,"title":"I18NRedirection.js","tooltip":"/package/page_config/I18NRedirection.js","value":"var http = require('http');\nvar i18n = require('../i18n/lang');\n\nfunction I18NRedirection(config) {\n    this.configurations = [];\n    if (config && config.path)\n        this.addConfig(config);\n    else\n        this.configurations = config;\n}\n\nI18NRedirection.prototype.addConfig = function(config) {\n    if (!config)\n        throw new Error('Configuração de Redirection faltando');\n    \n    this.configurations.push(config);\n}\n\nI18NRedirection.prototype.redirect = function (req, res) {\n    if (req.path == '/') {\n        var status = 303;\n        var url = '/pt/';\n        res.status(status);\n        res.setHeader(\"Location\", url);\n        var body;\n        if (req.accepts('html')) {\n            body = '<p>' + http.STATUS_CODES[status] + '. Redirecionando para <a href=\"' + url + '\">' + url + '</a></p>';\n            res.header('Content-Type', 'text/html');\n        } else {\n            body = http.STATUS_CODES[status] + '. Redirecting to ' + url;\n            res.header('Content-Type', 'text/plain');\n        }\n        return res.end(body);\n    }\n    \n    var relativePath = req.path.replace(/\\/[a-z]{2}(\\/.*)/, '$1');\n    console.log(relativePath);\n    res.send('OK');\n}\n\nmodule.exports = I18NRedirection;\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":41,"column":0},"end":{"row":41,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1466094788000}